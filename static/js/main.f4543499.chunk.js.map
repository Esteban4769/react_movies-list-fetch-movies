{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAdd","useState","setQuery","setMovie","errorMessage","setErrorMessage","isLoading","setLoading","loadMovie","a","trim","result","dontHavePoster","Poster","Title","Plot","imdbID","useEffect","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","App","setMovies","newMovie","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4543499.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=9223a01b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  const handleMovieAdd = () => {\n    if (movie) {\n      onAdd(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  const loadMovie = async () => {\n    if (!query.trim()) {\n      setErrorMessage('Invalid movie title');\n\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const result = await getMovie(query);\n\n      if ('Error' in result) {\n        setErrorMessage('Cant find movie with such a title');\n      } else {\n        const dontHavePoster = result.Poster === 'N/A';\n        // eslint-disable-next-line max-len\n        const noPosterImage = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n        setMovie({\n          title: result.Title,\n          description: result.Plot,\n          imgUrl: dontHavePoster\n            ? noPosterImage\n            : result.Poster,\n          imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n          imdbId: result.imdbID,\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    loadMovie();\n  };\n\n  useEffect(() => {\n    setErrorMessage('');\n  }, [query]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', {\n                'is-light': !isLoading,\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container is-loading\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    const isMovieAlreadyInList = !movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (isMovieAlreadyInList) {\n      setMovies(currentMovies => [...currentMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}